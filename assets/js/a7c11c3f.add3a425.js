"use strict";(self.webpackChunkcsharp_extended_compiler=self.webpackChunkcsharp_extended_compiler||[]).push([[6624],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),l=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=l(r),d=n,h=m["".concat(c,".").concat(d)]||m[d]||u[d]||o;return r?a.createElement(h,i(i({ref:t},p),{},{components:r})):a.createElement(h,i({ref:t},p))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[m]="string"==typeof e?e:n,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},773:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=r(7462),n=(r(7294),r(3905));const o={},i="Macros",s={unversionedId:"macros/index",id:"macros/index",title:"Macros",description:"Macros are programs that are ran during the compilation. These programs get access to the source code that is being compiled and can do anything that a regular program does. They can:",source:"@site/docs/macros/index.md",sourceDirName:"macros",slug:"/macros/",permalink:"/docs/macros/",draft:!1,editUrl:"https://github.com/distris/ExtendedCS/tree/main/docs/macros/index.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Use Case: Library Design",permalink:"/docs/capabilities/implicits/library-design"},next:{title:"Inlining",permalink:"/docs/macros/inlining"}},c={},l=[{value:"Types of Macros",id:"types-of-macros",level:2}],p={toc:l},m="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(m,(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"macros"},"Macros"),(0,n.kt)("p",null,"Macros are programs that are ran during the compilation. These programs get access to the source code that is being compiled and can do anything that a regular program does. They can:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Generate new code based on existing code (like ",(0,n.kt)("a",{parentName:"li",href:"/docs/capabilities/record/"},(0,n.kt)("inlineCode",{parentName:"a"},"[Record]"))," does)."),(0,n.kt)("li",{parentName:"ul"},"Change the existing code (like ",(0,n.kt)("a",{parentName:"li",href:"/docs/capabilities/lazy-property"},(0,n.kt)("inlineCode",{parentName:"a"},"[LazyProperty]"))," does)."),(0,n.kt)("li",{parentName:"ul"},"Validate the existing code. For example, you could validate the SQL queries being compiled by connecting to the database and checking them against the database schema."),(0,n.kt)("li",{parentName:"ul"},"Anything else, really.")),(0,n.kt)("p",null,"C# introduced their own version of macros called ",(0,n.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/dotnet/csharp/roslyn-sdk/source-generators-overview"},"source generators"),", however, our version has these advantages:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Currently source generators can only generate new code, while our macros are able to transform existing code as well."),(0,n.kt)("li",{parentName:"ul"},"To use source generators you must define a separate C# project for it (same as with our C#-based macros). Our macros also support rapid inline prototyping in the same assembly using the ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/scriban/scriban"},"scriban")," templating language."),(0,n.kt)("li",{parentName:"ul"},"We provide various macro-based capabilities, such as anonymous function inlining which are not provided by the source generators.")),(0,n.kt)("h2",{id:"types-of-macros"},"Types of Macros"),(0,n.kt)("p",null,"We provide support for three types of macros:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/docs/macros/attribute-based/"},"Attribute based macros")," - these are the simplest macros which you can use by just attaching an attribute to a type or a function. However, they are not very flexible.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/docs/macros/scriban-based/"},"Scriban based macros")," - middle ground between ability and complexity."),(0,n.kt)("p",{parentName:"li"},"You get the ability to program using ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/scriban/scriban"},"scriban")," templating language and some ability to introspect the types you are working with, however you are still limited to what scriban / our compiler APIs offer you.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"/docs/macros/csharp-based/"},"C# based macros")," - the most complex and most powerful version of the macros."),(0,n.kt)("p",{parentName:"li"},"You get access to raw Roslyn data structures and full power of C#, which allows you to do practically anything. For example, you can write macros to validate SQL at compile time, generate code based off some ",(0,n.kt)("inlineCode",{parentName:"p"},".json")," you read from the disk (or even fetch from the internet) and anything else that comes to your mind."))),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"To understand how macros work, it is useful (though not necessary) to have an approximate understanding of ",(0,n.kt)("a",{parentName:"p",href:"/docs/macros/csharp-compilation-process"},"how the compiler performs the compilation"),".")))}u.isMDXComponent=!0}}]);
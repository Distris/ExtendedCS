"use strict";(self.webpackChunkcsharp_extended_compiler=self.webpackChunkcsharp_extended_compiler||[]).push([[6371],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(f,i(i({ref:t},l),{},{components:n})):r.createElement(f,i({ref:t},l))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},33:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:1},i="GenConstructor",s={unversionedId:"capabilities/gen-constructor",id:"capabilities/gen-constructor",title:"GenConstructor",description:"GenConstructor] allows you to use the constructor generation facilities of [[Record] on any type.",source:"@site/docs/capabilities/gen-constructor.md",sourceDirName:"capabilities",slug:"/capabilities/gen-constructor",permalink:"/docs/capabilities/gen-constructor",draft:!1,editUrl:"https://github.com/distris/ExtendedCS/tree/main/docs/capabilities/gen-constructor.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"RecordType",permalink:"/docs/capabilities/record/record-type"},next:{title:"GenToString",permalink:"/docs/capabilities/gen-to-string"}},c={},p=[],l={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"genconstructor"},"GenConstructor"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"[GenConstructor]")," allows you to use the constructor generation facilities of ",(0,o.kt)("a",{parentName:"p",href:"/docs/capabilities/record/"},(0,o.kt)("inlineCode",{parentName:"a"},"[Record]"))," on any type."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cs"},"using GenerationAttributes;\n\n[GenConstructor]\npublic partial class Person {\n  public string FirstName, LastName;\n}\n")),(0,o.kt)("p",null,"It generates the specified constructors for the type, without generating ",(0,o.kt)("inlineCode",{parentName:"p"},"Equals"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"GetHashCode")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"ToString"),"."),(0,o.kt)("p",null,"Therefore, it is essential equal to this declaration:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cs"},"[Record(\n  GenerateEquality = false, \n  GenerateGetHashCode = false, \n  GenerateToString = false\n)]\n")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"You should use ",(0,o.kt)("inlineCode",{parentName:"p"},"[GenConstructor]")," instead of ",(0,o.kt)("inlineCode",{parentName:"p"},"[Record]")," if your type does not implement ",(0,o.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/dotnet/csharp/programming-guide/statements-expressions-operators/equality-comparisons#value-equality"},"structural equality semantics"),"."),(0,o.kt)("p",{parentName:"admonition"},"Usually it is because the type is a mutable container with a reference-based identity."),(0,o.kt)("p",{parentName:"admonition"},"Think two game objects: even if they have the same properties and are in the same place, they are still two distinct objects and are not equal to one another.")))}d.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkcsharp_extended_compiler=self.webpackChunkcsharp_extended_compiler||[]).push([[1758],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=p(r),f=o,m=u["".concat(c,".").concat(f)]||u[f]||d[f]||a;return r?n.createElement(m,s(s({ref:t},l),{},{components:r})):n.createElement(m,s({ref:t},l))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=f;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:o,s[1]=i;for(var p=2;p<a;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},3494:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:0},s="One-Off Macros",i={unversionedId:"macros/scriban-based/one-off-macros",id:"macros/scriban-based/one-off-macros",title:"One-Off Macros",description:"When using scriban-based macros with [AttributeMacro] you need to define a custom attribute that you can then attach to a class, struct, enum, field, property or method.",source:"@site/docs/macros/scriban-based/one-off-macros.md",sourceDirName:"macros/scriban-based",slug:"/macros/scriban-based/one-off-macros",permalink:"/ExtendedCS/docs/macros/scriban-based/one-off-macros",draft:!1,editUrl:"https://github.com/distris/ExtendedCS/tree/main/docs/macros/scriban-based/one-off-macros.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"docsSidebar",previous:{title:"Scriban-Based Macros",permalink:"/ExtendedCS/docs/macros/scriban-based/"},next:{title:"TODO: C#-Based Macros",permalink:"/ExtendedCS/docs/macros/csharp-based/"}},c={},p=[],l={toc:p},u="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"one-off-macros"},"One-Off Macros"),(0,o.kt)("p",null,"When using scriban-based macros with ",(0,o.kt)("a",{parentName:"p",href:"/ExtendedCS/docs/macros/scriban-based/"},(0,o.kt)("inlineCode",{parentName:"a"},"[AttributeMacro]"))," you need to define a custom attribute that you can then attach to a class, struct, enum, field, property or method."),(0,o.kt)("p",null,"However, sometimes you need to use the macro just once for a particular specific case."),(0,o.kt)("p",null,"In those cases instead of writing an ",(0,o.kt)("inlineCode",{parentName:"p"},"[AttributeMacro]")," you can use ",(0,o.kt)("inlineCode",{parentName:"p"},"[Macro]")," directly."),(0,o.kt)("p",null,"For example this generates the ",(0,o.kt)("inlineCode",{parentName:"p"},"JsonWriterForValue")," instances for a set of standard types:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cs"},"using GenerationAttributes;\n\n[Macro(@\"\n{{\n  generate_for = [\n    'byte', 'sbyte', 'short', 'ushort', 'int', 'uint', 'long', 'ulong', \n    'float', 'double', 'string', 'char', 'bool'\n  ]\n  add_using 'GenerationAttributes'\n}}\n\n{{ for type in generate_for }}\n  public sealed partial class JsonWriterFor_{{ type }} : JsonWriterForValue<{{ type }}> {\n    JsonWriterFor_{{ type }}() {}\n\n    [Implicit] public static readonly JsonWriterFor<{{ type }}> instance = \n      new JsonWriterFor_{{ type }}();\n\n    public void write({{ type }} value, JsonWriter writer) => writer.write(value);\n  }\n{{ end }}\n\")]\npublic static partial class JsonWriterFor_ {}\n")))}d.isMDXComponent=!0}}]);
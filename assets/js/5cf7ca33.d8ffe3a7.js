"use strict";(self.webpackChunkcsharp_extended_compiler=self.webpackChunkcsharp_extended_compiler||[]).push([[290],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),g=i,f=u["".concat(c,".").concat(g)]||u[g]||d[g]||o;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=g;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:i,a[1]=s;for(var l=2;l<o;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},8904:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(7462),i=(n(7294),n(3905));const o={sidebar_position:2},a="GenToString",s={unversionedId:"capabilities/gen-to-string",id:"capabilities/gen-to-string",title:"GenToString",description:"GenToString] allows you to use the ToString generation facilities of [[Record] on any type.",source:"@site/docs/capabilities/gen-to-string.md",sourceDirName:"capabilities",slug:"/capabilities/gen-to-string",permalink:"/ExtendedCS/docs/capabilities/gen-to-string",draft:!1,editUrl:"https://github.com/distris/ExtendedCS/tree/main/docs/capabilities/gen-to-string.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"GenConstructor",permalink:"/ExtendedCS/docs/capabilities/gen-constructor"},next:{title:"LazyProperty",permalink:"/ExtendedCS/docs/capabilities/lazy-property"}},c={},l=[],p={toc:l},u="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"gentostring"},"GenToString"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"[GenToString]")," allows you to use the ",(0,i.kt)("inlineCode",{parentName:"p"},"ToString")," generation facilities of ",(0,i.kt)("a",{parentName:"p",href:"/ExtendedCS/docs/capabilities/record/"},(0,i.kt)("inlineCode",{parentName:"a"},"[Record]"))," on any type."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cs"},"using GenerationAttributes;\n\n[GenToString]\npublic partial class Person {\n  public string FirstName, LastName;\n}\n")),(0,i.kt)("p",null,"It generates the ",(0,i.kt)("inlineCode",{parentName:"p"},"ToString"),", without generating constructors, ",(0,i.kt)("inlineCode",{parentName:"p"},"Equals")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"GetHashCode"),"."),(0,i.kt)("p",null,"Therefore, it is essential equal to this declaration:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cs"},"[Record(\n  ConstructorFlags.None, \n  GenerateEquality = false, \n  GenerateGetHashCode = false, \n  GenerateToString = true\n)]\n")))}d.isMDXComponent=!0}}]);
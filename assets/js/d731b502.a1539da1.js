"use strict";(self.webpackChunkcsharp_extended_compiler=self.webpackChunkcsharp_extended_compiler||[]).push([[8624],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>b});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=p(r),m=a,b=u["".concat(c,".").concat(m)]||u[m]||d[m]||i;return r?n.createElement(b,l(l({ref:t},s),{},{components:r})):n.createElement(b,l({ref:t},s))}));function b(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[u]="string"==typeof e?e:a,l[1]=o;for(var p=2;p<i;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5963:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const i={sidebar_position:4},l="PublicAccessor",o={unversionedId:"capabilities/public-accessor",id:"capabilities/public-accessor",title:"PublicAccessor",description:"[PublicAccessor] generates a public getter in a partial type definition that allows accessing a private / protected field.",source:"@site/docs/capabilities/public-accessor.md",sourceDirName:"capabilities",slug:"/capabilities/public-accessor",permalink:"/docs/capabilities/public-accessor",draft:!1,editUrl:"https://github.com/distris/ExtendedCS/tree/main/docs/capabilities/public-accessor.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docsSidebar",previous:{title:"LazyProperty",permalink:"/docs/capabilities/lazy-property"},next:{title:"Exhaustive Matching",permalink:"/docs/capabilities/exhaustive-matching"}},c={},p=[],s={toc:p},u="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"publicaccessor"},"PublicAccessor"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"[PublicAccessor]")," generates a ",(0,a.kt)("inlineCode",{parentName:"p"},"public")," getter in a partial type definition that allows accessing a ",(0,a.kt)("inlineCode",{parentName:"p"},"private")," / ",(0,a.kt)("inlineCode",{parentName:"p"},"protected")," field."),(0,a.kt)("p",null,"Usually you want to do this when the ",(0,a.kt)("inlineCode",{parentName:"p"},"private")," field is effectively-immutable, however, it has to be declared as mutable due to the framework limitations."),(0,a.kt)("p",null,"This pattern comes up often in Unity:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"class MyScript : MonoBehaviour {\n  [SerializeField] int _MyValue;\n  public int MyValue => _MyValue;\n}\n")),(0,a.kt)("p",null,"This can be rewritten using ",(0,a.kt)("inlineCode",{parentName:"p"},"[PublicAccessor]"),", which generates the ",(0,a.kt)("inlineCode",{parentName:"p"},"public int MyValue => _MyValue;")," part:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"partial class MyScript : MonoBehaviour {\n  [SerializeField, PublicAccessor] int _MyValue;\n}\n")),(0,a.kt)("p",null,"The name of the generated property is computed by:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Removing underscores (",(0,a.kt)("inlineCode",{parentName:"li"},"_"),") from the start of the original field name."),(0,a.kt)("li",{parentName:"ul"},"Adding underscores to the end of the name until there is no clash with other identifiers.")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Original Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Public Name"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"_MyValue"),(0,a.kt)("td",{parentName:"tr",align:null},"MyValue")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"MyValue"),(0,a.kt)("td",{parentName:"tr",align:null},"MyValue_")))))}d.isMDXComponent=!0}}]);